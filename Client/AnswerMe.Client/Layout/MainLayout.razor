@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager

<dialog id="Modal-Message" class="modal">
    <div class="modal-box glass-box ">
        <div id="modal-box">
        </div>
        <div class="modal-action">
            <form method="dialog">
                <!-- if there is a button in form, it will close the modal -->
                <button class="btn btn-outline btn-primary">close</button>
            </form>
        </div>
    </div>
</dialog>

<AuthorizeView>
    <Authorized>
      <div class="nav-section transition-transform @AccountMenuClass">
            <aside id="AccountMenu" class="fixed top-0 left-0 z-40 w-1/4 h-screen pt-20 transition-transform @_sidebarClass xl:-translate-x-0 2xl:-translate-x-0 bg-white border-r border-gray-200 dark:bg-gray-800 dark:border-gray-700 " style="background-color: #1d232a;margin-top: -65px" aria-label="Sidebar">
                <AccountMenu AccountMenuClass="AccountMenuClass" ChatsMenuClass="NavMenuClass" AccountMenuClassChanged="AccountMenuChanged" ChatsMenuClassChanged="ChatsMenuChanged"/>
            </aside>
        </div>
        
        <div class="nav-section transition-transform @NavMenuClass">
            <aside id="SidebarMenu" class="fixed top-0 left-0 z-40 w-1/4 h-screen pt-20 transition-transform @_sidebarClass xl:-translate-x-0 2xl:-translate-x-0 bg-white border-r border-gray-200 dark:bg-gray-800 dark:border-gray-700 " style="background-color: #1d232a;margin-top: -65px" aria-label="Sidebar">
                <NavMenu AccountMenuClass="AccountMenuClass" ChatsMenuClass="NavMenuClass" AccountMenuClassChanged="AccountMenuChanged" ChatsMenuClassChanged="ChatsMenuChanged"/>
            </aside>
        </div>

        <div id="ChatBody" class="body-content transition-transform @_chatBodyClass">
            @Body
        </div>

    </Authorized>

    <NotAuthorized>
        <Login/>
    </NotAuthorized>

</AuthorizeView>

@code
{
    private bool IsAtHome = false;
    private string? ScreenSize;
    private string _chatBodyClass = "";
    private string _sidebarClass = "-translate-x-full";

    private string AccountMenuClass = "-translate-x-full";
    private string NavMenuClass = "-translate-x-0";

    [Inject] public IJSRuntime JsRuntime { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        if (NavigationManager.Uri == NavigationManager.BaseUri)
        {
            IsAtHome = true;
        }

        ScreenSize = await JsRuntime.InvokeAsync<string>("getScreenSizeCategory");

        if (ScreenSize is "sm" or "md" or "lg" or "xl")
        {
            if (IsAtHome)
            {
                _sidebarClass = "-translate-x-0 w-full";
                _chatBodyClass = "-translate-x-full";
            }
            else
            {
                _chatBodyClass = "";
            }
        }
        else
        {
            _sidebarClass = "";
            _chatBodyClass = "";
        }

        await base.OnInitializedAsync();
    }

    private void AccountMenuChanged(string updateClass)
    {
        AccountMenuClass = updateClass;
    }

    private void ChatsMenuChanged(string updateClass)
    {
        NavMenuClass = updateClass;
    }

}